name: Deploy CDK Stacks

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  AWS_REGION: us-east-1  # Change to your preferred region

jobs:
  # Stage 1: Checkout & Setup
  checkout:
    name: "Stage 1: Checkout & Setup"
    runs-on: ubuntu-latest
    outputs:
      artifact-id: ${{ steps.upload.outputs.artifact-id }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Upload workspace
      id: upload
      uses: actions/upload-artifact@v4
      with:
        name: workspace-${{ github.run_id }}
        path: |
          .
          !node_modules/.cache
        retention-days: 1

  # Stage 2: Tests
  tests:
    name: "Stage 2: Run Tests"
    runs-on: ubuntu-latest
    needs: checkout
    
    steps:
    - name: Download workspace
      uses: actions/download-artifact@v4
      with:
        name: workspace-${{ github.run_id }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm test
    
    - name: Run linting
      run: npm run lint
      continue-on-error: true
    
    - name: Run type checking
      run: npm run build

  # Stage 3: Plan (CDK Synth & Diff)
  plan:
    name: "Stage 3: Plan Changes"
    runs-on: ubuntu-latest
    needs: [checkout, tests]
    
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Download workspace
      uses: actions/download-artifact@v4
      with:
        name: workspace-${{ github.run_id }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Configure AWS credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::381492077721:role/Github_Actions_Role
        role-session-name: github-actions
        aws-region: us-east-1
    
    - name: Install CDK CLI
      run: npm install -g aws-cdk
    
    - name: CDK Synth
      run: cdk synth --all
    
    - name: CDK Diff
      id: diff
      run: |
        echo "## CDK Plan Output"
        echo "------------------"
        cdk diff --all | tee cdk-diff.txt || true
    
    - name: Upload CDK plan
      uses: actions/upload-artifact@v4
      with:
        name: cdk-plan-${{ github.run_id }}
        path: |
          cdk.out/
          cdk-diff.txt
        retention-days: 1
        
  # Stage 4: Approve
  approval:
    name: "Stage 4: Manual Approval"
    runs-on : ubuntu-latest
    needs: [checkout, tests, plan]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    permissions:
      issues: write
      contents: read

    steps:
      - name : Request Manual Approval
        uses : trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: Sayaji911
          minimum-approvals: 1
          issue-title: "Deploying Infra"
          issue-body: "Please approve or deny the deployment"
          exclude-workflow-initiator-as-approver: false
          fail-on-denial: true
          
  # Stage 5: Deploy
  deploy:
    name: "Stage 5: Deploy to Production"
    runs-on: ubuntu-latest
    needs: [checkout, tests, plan, approval]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Download workspace
      uses: actions/download-artifact@v4
      with:
        name: workspace-${{ github.run_id }}
    
    - name: Download CDK plan
      uses: actions/download-artifact@v4
      with:
        name: cdk-plan-${{ github.run_id }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Configure AWS credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::381492077721:role/Github_Actions_Role
        role-session-name: github-actions
        aws-region: us-east-1
    
    - name: Install CDK CLI
      run: npm install -g aws-cdk
    
    - name: Check CDK Bootstrap status
      run: |
        echo "🔍 Checking CDK bootstrap status..."
        if aws cloudformation describe-stacks --stack-name CDKToolkit --region ${{ env.AWS_REGION }} >/dev/null 2>&1; then
          echo "✅ CDK already bootstrapped, skipping..."
        else
          echo "🚀 Bootstrapping CDK for the first time..."
          cdk bootstrap
        fi
    
    - name: CDK Deploy
      run: |
        echo "🚀 Deploying CDK stacks..."
        cdk deploy --all --require-approval never --verbose
        echo "✅ Deployment completed successfully!"
    
    - name: Post-deployment validation
      run: |
        echo "🔍 Running post-deployment checks..."
        echo "✅ All checks passed!"

  # Summary job
  summary:
    name: "Deployment Summary"
    runs-on: ubuntu-latest
    needs: [checkout, tests, plan, deploy]
    if: always() && (github.event_name == 'push' && github.ref == 'refs/heads/master')
    
    steps:
    - name: Deployment Summary
      run: |
        echo "## 📋 Deployment Summary"
        echo "- Checkout: ${{ needs.checkout.result }}"
        echo "- Tests: ${{ needs.tests.result }}"  
        echo "- Plan: ${{ needs.plan.result }}"
        echo "- Approval: ${{ needs.approval.result }}"
        echo "- Deploy: ${{ needs.deploy.result }}"
        
        if [[ "${{ needs.deploy.result }}" == "success" ]]; then
          echo "🎉 Deployment completed successfully!"
        else
          echo "❌ Deployment failed or was cancelled"
        fi
